//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VerintAuthWebService
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.lagan.com/wsdl/FLAuthTypes")]
    public partial class FWTException
    {
        
        private string errorMessageField;
        
        private int errorCodeField;
        
        private string additionalInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string ErrorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int ErrorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string AdditionalInfo
        {
            get
            {
                return this.additionalInfoField;
            }
            set
            {
                this.additionalInfoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.lagan.com/wsdl/FLAuthService", ConfigurationName="VerintAuthWebService.FLAuthWebInterface")]
    public interface FLAuthWebInterface
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lagan.com/wsdl/FLAuthService", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(VerintAuthWebService.FWTException), Action="http://www.lagan.com/wsdl/FLAuthService", Name="FWTException", Namespace="http://www.lagan.com/wsdl/FLAuthTypes")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<VerintAuthWebService.authenticateRequest> authenticateAsync(VerintAuthWebService.authenticateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lagan.com/wsdl/FLAuthService", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(VerintAuthWebService.FWTException), Action="http://www.lagan.com/wsdl/FLAuthService", Name="FWTException", Namespace="http://www.lagan.com/wsdl/FLAuthTypes")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<VerintAuthWebService.authenticateByProxyResponse> authenticateByProxyAsync(VerintAuthWebService.authenticateByProxyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lagan.com/wsdl/FLAuthService", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(VerintAuthWebService.FWTException), Action="http://www.lagan.com/wsdl/FLAuthService", Name="FWTException", Namespace="http://www.lagan.com/wsdl/FLAuthTypes")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<VerintAuthWebService.verifyResponse> verifyAsync(VerintAuthWebService.verifyRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class authenticateRequest
    {
        
        public authenticateRequest()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lagan.com/wsdl/FLAuthTypes")]
    public partial class FWTUser
    {
        
        private string userIDField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string UserID
        {
            get
            {
                return this.userIDField;
            }
            set
            {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class authenticateByProxyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.lagan.com/wsdl/FLAuthTypes", Order=0)]
        public VerintAuthWebService.FWTUser FLUser;
        
        public authenticateByProxyRequest()
        {
        }
        
        public authenticateByProxyRequest(VerintAuthWebService.FWTUser FLUser)
        {
            this.FLUser = FLUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class authenticateByProxyResponse
    {
        
        public authenticateByProxyResponse()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.lagan.com/wsdl/FLAuthTypes")]
    public partial class FWTVerifyDetails
    {
        
        private FWTUser userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public FWTUser User
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class verifyRequest
    {
        
        public verifyRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class verifyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.lagan.com/wsdl/FLAuthTypes", Order=0)]
        public VerintAuthWebService.FWTVerifyDetails FWTVerifyDetails;
        
        public verifyResponse()
        {
        }
        
        public verifyResponse(VerintAuthWebService.FWTVerifyDetails FWTVerifyDetails)
        {
            this.FWTVerifyDetails = FWTVerifyDetails;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    public interface FLAuthWebInterfaceChannel : VerintAuthWebService.FLAuthWebInterface, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30310-0943")]
    public partial class FLAuthWebInterfaceClient : System.ServiceModel.ClientBase<VerintAuthWebService.FLAuthWebInterface>, VerintAuthWebService.FLAuthWebInterface
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FLAuthWebInterfaceClient() : 
                base(FLAuthWebInterfaceClient.GetDefaultBinding(), FLAuthWebInterfaceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.FLAuth.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FLAuthWebInterfaceClient(EndpointConfiguration endpointConfiguration) : 
                base(FLAuthWebInterfaceClient.GetBindingForEndpoint(endpointConfiguration), FLAuthWebInterfaceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FLAuthWebInterfaceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FLAuthWebInterfaceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FLAuthWebInterfaceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FLAuthWebInterfaceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FLAuthWebInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VerintAuthWebService.authenticateRequest> VerintAuthWebService.FLAuthWebInterface.authenticateAsync(VerintAuthWebService.authenticateRequest request)
        {
            return base.Channel.authenticateAsync(request);
        }
        
        public System.Threading.Tasks.Task<VerintAuthWebService.authenticateRequest> authenticateAsync()
        {
            VerintAuthWebService.authenticateRequest inValue = new VerintAuthWebService.authenticateRequest();
            return ((VerintAuthWebService.FLAuthWebInterface)(this)).authenticateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VerintAuthWebService.authenticateByProxyResponse> VerintAuthWebService.FLAuthWebInterface.authenticateByProxyAsync(VerintAuthWebService.authenticateByProxyRequest request)
        {
            return base.Channel.authenticateByProxyAsync(request);
        }
        
        public System.Threading.Tasks.Task<VerintAuthWebService.authenticateByProxyResponse> authenticateByProxyAsync(VerintAuthWebService.FWTUser FLUser)
        {
            VerintAuthWebService.authenticateByProxyRequest inValue = new VerintAuthWebService.authenticateByProxyRequest();
            inValue.FLUser = FLUser;
            return ((VerintAuthWebService.FLAuthWebInterface)(this)).authenticateByProxyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<VerintAuthWebService.verifyResponse> VerintAuthWebService.FLAuthWebInterface.verifyAsync(VerintAuthWebService.verifyRequest request)
        {
            return base.Channel.verifyAsync(request);
        }
        
        public System.Threading.Tasks.Task<VerintAuthWebService.verifyResponse> verifyAsync()
        {
            VerintAuthWebService.verifyRequest inValue = new VerintAuthWebService.verifyRequest();
            return ((VerintAuthWebService.FLAuthWebInterface)(this)).verifyAsync(inValue);
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FLAuth))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FLAuth))
            {
                return new System.ServiceModel.EndpointAddress("http://scnverinttest.stockport.gov.uk:8080/lagan/services/FLAuth");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return FLAuthWebInterfaceClient.GetBindingForEndpoint(EndpointConfiguration.FLAuth);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return FLAuthWebInterfaceClient.GetEndpointAddress(EndpointConfiguration.FLAuth);
        }
        
        public enum EndpointConfiguration
        {
            
            FLAuth,
        }
    }
}
